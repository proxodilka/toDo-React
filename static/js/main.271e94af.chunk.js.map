{"version":3,"sources":["components/header/header.js","components/search-filter/search-filter.js","components/toolbar/toolbar.js","components/task-item/task-item.js","components/task-list/task-list.js","components/add-form/add-form.js","App.js","index.js"],"names":["Header","className","SearchFilter","filtersFn","x","done","state","filters","id","name","active","filterChange","find","setState","map","el","generateFilterFunction","props","onFilterChange","this","ind","arr","classList","length","key","onClick","React","Component","Toolbar","statusFilter","searchFilter","statusFilterChange","fn","exportFilter","searchFilterChange","e","req","target","value","toLowerCase","trim","text","indexOf","onChange","placeholder","type","autocomplete","autocorrect","autocapitalize","spellcheck","TaskItem","task","onDelete","onMarkDone","onMarkImportant","important","styleClass","console","log","checked","htmlFor","ref","TaskList","tasks","AddForm","taskValue","Add","preventDefault","onAdd","updateValue","onSubmit","App","newTask","Date","now","timeAdd","lastEdit","Math","floor","random","dataFilter","Tasks","changeFilter","filter","deleteItem","findIndex","slice","addItem","updateField","field","val","toggleField","markDone","markImportant","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.271e94af.chunk.js","sourcesContent":["import React from 'react';\r\nimport Ibutton from '../i-button/i-button.js';\r\nimport './header.css';\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <div className=\"headerRoot\">\r\n            <span className=\"logoText\">Todo list</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './search-filter.css';\r\n\r\nclass SearchFilter extends React.Component{\r\n\r\n    filtersFn = [\r\n        (x)=>x,\r\n        (x)=>!x.done,\r\n        (x)=>x.done\r\n    ]\r\n\r\n    state = {\r\n        filters: [\r\n            {id: 0, name: 'All', active: true},\r\n            {id: 1, name: 'Active', active: false},\r\n            {id: 2, name: 'Done', active: false}\r\n        ],\r\n    }\r\n\r\n    filterChange = (id)=>{\r\n        if ((this.state.filters.find((x)=>x.active) || {id:-1}).id==id)\r\n            return;\r\n\r\n        this.setState( ( {filters} ) =>{\r\n            return {\r\n                filters: filters.map((el)=>el.id==id?{...el, active:true}:{...el, active:false})\r\n            }\r\n        }, ()=>this.generateFilterFunction(id));\r\n\r\n    }\r\n\r\n    generateFilterFunction = (id)=>{\r\n        this.props.onFilterChange( this.filtersFn[id] );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"buttonsContainer\">\r\n                {this.state.filters.map((el, ind, arr)=>{\r\n                    let classList = \"btn\";\r\n\r\n                    if (el.active) classList+=\" btn-primary\";\r\n                    else classList+=\" btn-outline-secondary\";\r\n\r\n                    if (!ind) classList+=\" first\";\r\n\r\n                    if (ind==arr.length-1) classList+=\" last\";\r\n\r\n                    return(\r\n                        <button key={el.id} className={classList} onClick={()=>this.filterChange(el.id)}>{el.name}</button>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchFilter;","import React from 'react';\r\nimport SearchFilter from '../search-filter/search-filter.js';\r\n\r\nimport './toolbar.css';\r\n\r\nclass Toolbar extends React.Component{\r\n\r\n    state = {\r\n        statusFilter: (x)=>x,\r\n        searchFilter: (x)=>x\r\n    }\r\n\r\n    statusFilterChange = (fn)=>{\r\n         this.setState({\r\n             statusFilter: fn\r\n         }, this.exportFilter);\r\n    }\r\n\r\n    searchFilterChange = (e)=>{\r\n        let req = e.target.value.toLowerCase().trim();\r\n        this.setState({\r\n            searchFilter: ((x)=>x.text.toLowerCase().indexOf(req)!=-1)\r\n        }, this.exportFilter);\r\n    }\r\n\r\n    exportFilter = ()=>{\r\n        this.props.onFilterChange(\r\n            (x)=>this.state.statusFilter(x)&&this.state.searchFilter(x)\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"toolbarRoot\">\r\n                <input onChange={this.searchFilterChange} id=\"searchField\" className=\"form-control\" placeholder=\"search...\" type=\"text\"\r\n                    autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"/>\r\n                <SearchFilter onFilterChange={this.statusFilterChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './task-item.css';\r\n\r\n\r\nclass TaskItem extends React.Component{\r\n\r\n    render(){\r\n        const {task, onDelete, onMarkDone, onMarkImportant} = this.props;\r\n        const {important, done} = task;\r\n\r\n        const styleClass = `taskText nonActiveTaskUnit ${important?\"important\":\"\"} ${done?\"done\":\"\"}`;\r\n\r\n        console.log('reRender');\r\n\r\n        return (\r\n            <div className='taskUnit'>\r\n                <input onChange={()=>onMarkDone(task.id)}type=\"checkbox\" id={task.id} checked={done}></input>\r\n                <label className={styleClass} htmlFor={task.id}>\r\n                    <div className=\"inputField\" ref={\"editable \"+task.id}>\r\n                        {task.text}\r\n                    </div>\r\n                </label>\r\n                {/* <button onClick = {()=>this.refs[\"editable \"+task.id].} className=\"btn btn-outline-warning actSelector\">\r\n                    <i className=\"fa fa-pencil\"></i>\r\n                </button> */}\r\n                <button onClick = {()=>onMarkImportant(task.id)} className=\"btn btn-outline-primary actSelector\">\r\n                    <i className=\"fa fa-exclamation\"></i>\r\n                </button>\r\n                <button onClick={()=>onDelete(task.id)} className=\"btn btn-outline-danger actSelector\">\r\n                    <i className=\"fa fa-trash-o\"></i>\r\n                </button>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport TaskItem from '../task-item/task-item.js';\r\nimport './task-list.css';\r\n\r\nconst TaskList = ({tasks, onDelete, onMarkImportant, onMarkDone})=>{\r\n    return(\r\n        <div className=\"tasksList\">\r\n            {tasks.map((task)=><TaskItem key={task.id}\r\n                task={task}\r\n                onDelete = {onDelete}\r\n                onMarkImportant = {onMarkImportant}\r\n                onMarkDone = {onMarkDone} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React from 'react';\r\nimport './add-form.css';\r\n\r\nclass AddForm extends React.Component{\r\n\r\n    state = {\r\n        taskValue: \"\"\r\n    }\r\n\r\n    Add = (e)=>{\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.taskValue);\r\n        this.setState({\r\n            taskValue: \"\"\r\n        })\r\n    }\r\n\r\n    updateValue = (e)=>{\r\n        this.setState({\r\n            taskValue: e.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.Add} className=\"addFormRoot\">\r\n                <input className=\"form-control\" placeholder=\"input task here...\" onChange = {this.updateValue}\r\n                       type=\"text\" value={this.state.taskValue} autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" />\r\n                <button className=\"ml-2 btn btn-primary\">Add</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddForm;\r\n","import React from 'react';\r\nimport Header from './components/header/header.js';\r\nimport Toolbar from './components/toolbar/toolbar.js';\r\nimport TaskList from './components/task-list/task-list.js';\r\nimport AddForm from './components/add-form/add-form.js';\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\nconst getTasks = ()=>{\r\n    return;\r\n}\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    newTask = (text=\"\", important=false, id=Date.now(), timeAdd=id, lastEdit=id)=>{\r\n        return{\r\n            id: Math.floor(Math.random()*1000+id),\r\n            text: text,\r\n            timeAdd: timeAdd,\r\n            lastEdit: lastEdit,\r\n            done: false,\r\n            important: important\r\n        };\r\n    }\r\n\r\n    state = {\r\n        dataFilter: (x)=>x,\r\n        Tasks: [\r\n            this.newTask(\"buy some butter\"),\r\n            this.newTask(\"do math\"),\r\n            this.newTask(\"finish this app\"),\r\n            this.newTask(\"learn react\")\r\n        ]\r\n    }\r\n\r\n    changeFilter = (filter)=>{\r\n        this.setState({\r\n            dataFilter: filter\r\n        });\r\n    }\r\n\r\n    deleteItem = (id)=>{\r\n        this.setState(({Tasks})=>{\r\n            const ind = Tasks.findIndex((el)=>el.id==id);\r\n\r\n            return{\r\n                Tasks: [\r\n                    ...Tasks.slice(0, ind),\r\n                    ...Tasks.slice(ind+1)\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    addItem = (text)=>{\r\n        this.setState( ({Tasks})=>{\r\n            return{\r\n                Tasks: [\r\n                    this.newTask(text),\r\n                    ...Tasks\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    updateField = (arr, field, val, id)=>{\r\n        return arr.map((el)=>el.id==id?{...el, [field]:val}:el);\r\n    }\r\n\r\n    toggleField = (arr, field, id)=>{\r\n        return arr.map((el)=>el.id==id?{...el, [field]:!el[field]}:el);\r\n    }\r\n\r\n    markDone = (id)=>{\r\n        this.setState(({Tasks})=>{\r\n            return {\r\n                Tasks: this.toggleField(Tasks, 'done', id)\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    markImportant = (id)=>{\r\n        this.setState(({Tasks})=>{\r\n            return {\r\n                Tasks: this.toggleField(Tasks, 'important', id)\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                <Header></Header>\r\n                <main>\r\n                    <Toolbar onFilterChange={this.changeFilter} />\r\n                    <TaskList tasks = {this.state.Tasks.filter(this.state.dataFilter)}\r\n                            onDelete = {this.deleteItem}\r\n                            onMarkImportant = {this.markImportant}\r\n                            onMarkDone = {this.markDone}/>\r\n                    <AddForm onAdd = {this.addItem} />\r\n                </main>\r\n            </div>       \r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App.js';\n\n\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}